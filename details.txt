This project will be your first experience with understanding the importance of version control and hosting a website on GitHub Pages.

The home page is required to be named "index.html." Additionally, the minimum required pages are:

- mammals.html
- birds.html
- reptiles.html

*Common Elements:*

- Each page should have a header containing a logo.
- A navigational menu with links to "home" and other pages should be present on each page.
- A footer with some content is required on each page.
- Each page should include a sidebar and a main content area. The content of these areas will differ for each page, but the layouts should be similar.

*Home Page:*

Sidebar:

- Display a list with the names of all animals.

Main Content:

- Show a welcome message on page load.
- When an animal name in the sidebar is clicked, replace the welcome message with a short summary of that animal.
- If the "active" animal's name is clicked again, deactivate it, and display the "welcome" message.

*Home Page - Short Summary:*

- The short summary of an animal should include:
  - A small image of the animal
  - The name of the animal
  - The first 200 characters of the description (or a similar solution)
  - Information about what the animal eats
  - The group it belongs to, with a link to the group page (e.g., mammal, bird, or reptile)

Group Pages:

Sidebar:

- Display only the names of animals in that specific group. For example, the reptile page should not include birds.

Main Content:

- Display a message about that group type.
- When an animal name is clicked, show the full summary of the animal.

*Group Pages - Full Summary:*

- The full summary should show all the properties of an animal. The display format is flexible, but it must include all relevant information.

*Development Notes:*

- The animal content must be dynamic.
- You can hard code the navigation menu, header, footer, and default content for each page. However, all animal-related content should be dynamically generated in JavaScript and added to the page when needed.
- The site should handle additional animals being added as objects in a JS file without requiring HTML or CSS adjustments. This includes file paths to images and links to group pages inside the animal descriptions.

*Additional Development Notes:*

*Frontend Programming:*

- Take control, Pop ou
- Arrange
- Drawing
- Images:
  - Find them yourself!
  - Never store images in objects or arrays. Use an "images" folder. The object should have the image name or file path as the value of a property.
  - Images are easier to style when images of the same type have the same dimensions.

*JS Files:*

- Due to local development browser security, you cannot read local text files into a JS file without running a web server.
- Importing/exporting JS 'modules' is not possible.
- To summarize, you'll need to duplicate objects and functions in different JS files.

*Want More?*

Home page sidebar:

- Below the list of animal names, display a "favorite food" button or a similar feature.
- Users should be able to filter the list of animal names by hovering over what food they like to eat (e.g., make non-matching animal names grey or faded).
- Hint: Use the groups "Animals," "Plants," and "Insects."
- The value of the food property will be a string, so consider how to match values.